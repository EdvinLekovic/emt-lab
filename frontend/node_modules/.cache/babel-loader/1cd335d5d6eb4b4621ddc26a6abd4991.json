{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\edvin\\\\IdeaProjects\\\\emt-lab\\\\frontend\\\\src\\\\components\\\\Books\\\\BookEdit\\\\bookEdit.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookEdit = props => {\n  _s();\n\n  const history = useHistory();\n  const [formData, updateFormData] = React.useState({\n    name: \"\",\n    category: \"\",\n    authorId: 0,\n    availableCopies: 0\n  });\n\n  const handleChange = e => {\n    updateFormData({ ...formData,\n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const name = formData.name !== \"\" ? formData.name : props.book.name;\n    const category = formData.category !== \"\" ? formData.category : props.book.category;\n    const authorId = formData.authorId !== 0 ? formData.authorId : props.book.author.id;\n    const availableCopies = formData.availableCopies !== 0 ? formData.availableCopies : props.book.availableCopies;\n    props.onEditBook(props.book.id, name, category, authorId, availableCopies);\n    history.push(\"/books\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-5\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Book name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"name\",\n            name: \"name\",\n            required: true,\n            placeholder: props.book.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            children: \"Book category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"category\",\n            className: \"form-control\",\n            onChange: handleChange,\n            children: props.categories.map(term => {\n              if (props.book.category !== undefined && props.book.category === term) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: term,\n                  value: term,\n                  children: term\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 44\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: term,\n                  children: term\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 42\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"author\",\n            children: \"Book author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"authorId\",\n            className: \"form-control\",\n            onChange: handleChange,\n            children: props.authors.map(term => {\n              if (props.book.author !== undefined && props.book.author.id === term.id) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  selected: term.id,\n                  value: term.id,\n                  children: term.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 44\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: term.id,\n                  children: term.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 44\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"availableCopies\",\n            children: \"Book available copies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"availableCopies\",\n            name: \"availableCopies\",\n            required: true,\n            placeholder: props.book.availableCopies,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"submit\",\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookEdit, \"MO5PdK3rpQ8UfYl0yE9IFx6647s=\", false, function () {\n  return [useHistory];\n});\n\n_c = BookEdit;\nexport default BookEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookEdit\");","map":{"version":3,"sources":["C:/Users/edvin/IdeaProjects/emt-lab/frontend/src/components/Books/BookEdit/bookEdit.js"],"names":["React","useHistory","BookEdit","props","history","formData","updateFormData","useState","name","category","authorId","availableCopies","handleChange","e","target","value","trim","onFormSubmit","preventDefault","book","author","id","onEditBook","push","categories","map","term","undefined","authors"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\nconst BookEdit = (props) => {\r\n\r\n    const history = useHistory();\r\n    const [formData,updateFormData] = React.useState({\r\n        name : \"\",\r\n        category : \"\",\r\n        authorId : 0,\r\n        availableCopies : 0\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        updateFormData({\r\n            ...formData,\r\n            [e.target.name] : e.target.value.trim()\r\n        })\r\n    };\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        const name = formData.name !== \"\" ? formData.name : props.book.name;\r\n        const category = formData.category !== \"\" ? formData.category : props.book.category;\r\n        const authorId = formData.authorId !== 0 ? formData.authorId : props.book.author.id;\r\n        const availableCopies = formData.availableCopies !== 0 ? formData.availableCopies : props.book.availableCopies;\r\n        \r\n        props.onEditBook(props.book.id,name,category,authorId,availableCopies);\r\n        history.push(\"/books\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-md-5\">\r\n                <form onSubmit={onFormSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Book name</label>\r\n                        <input type=\"text\"\r\n                               className=\"form-control\"\r\n                               id=\"name\"\r\n                               name=\"name\"\r\n                               required\r\n                               placeholder={props.book.name}\r\n                               onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"category\">Book category</label>\r\n                        <select name=\"category\" className=\"form-control\" onChange={handleChange}>\r\n                            {props.categories.map((term) => {\r\n                                if(props.book.category!== undefined &&\r\n                                    props.book.category === term){\r\n                                    return <option selected={term} value={term}>{term}</option>\r\n                                }\r\n                                else {\r\n                                 return  <option value={term}>{term}</option>\r\n                                }\r\n                                }\r\n                            )}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"author\">Book author</label>\r\n                        <select name=\"authorId\" className=\"form-control\" onChange={handleChange}>\r\n                            {props.authors.map((term) => {\r\n                                if(props.book.author !== undefined &&\r\n                                    props.book.author.id === term.id){\r\n                                    return <option selected={term.id} value={term.id}>{term.name}</option>\r\n                                }\r\n                                else {\r\n                                    return <option value={term.id}>{term.name}</option>\r\n                                }\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"availableCopies\">Book available copies</label>\r\n                        <input type=\"text\"\r\n                               className=\"form-control\"\r\n                               id=\"availableCopies\"\r\n                               name=\"availableCopies\"\r\n                               required\r\n                               placeholder={props.book.availableCopies}\r\n                               onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <button id=\"submit\" type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookEdit;"]},"metadata":{},"sourceType":"module"}