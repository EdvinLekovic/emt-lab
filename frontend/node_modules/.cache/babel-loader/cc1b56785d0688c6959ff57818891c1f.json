{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\edvin\\\\IdeaProjects\\\\emt-lab\\\\frontend\\\\src\\\\components\\\\App\\\\App.js\";\nimport './App.css';\nimport * as React from \"react\";\nimport { BrowserRouter as Router, Redirect, Route } from 'react-router-dom';\nimport Authors from \"../Authors/authors\";\nimport Countries from \"../Countries/countries\";\nimport Header from \"../Header/header\";\nimport Books from \"../Books/BookList/books\";\nimport BookAdd from \"../Books/BookAdd/bookAdd\";\nimport BookEdit from \"../Books/BookEdit/BookEdit\";\nimport EBookService from \"../../repository/EBookRepository\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadBooks = () => {\n      EBookService.fetchBooks().then(data => {\n        this.setState({\n          books: data.data\n        });\n      });\n    };\n\n    this.loadAuthors = () => {\n      EBookService.fetchAuthors().then(data => {\n        this.setState({\n          authors: data.data\n        });\n      });\n    };\n\n    this.loadCountries = () => {\n      EBookService.fetchCountries().then(data => {\n        this.setState({\n          countries: data.data\n        });\n      });\n    };\n\n    this.addBook = (name, category, authorId, availableCopies) => {\n      EBookService.addBook(name, category, authorId, availableCopies).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.deleteBook = id => {\n      EBookService.deleteBook(id).then(() => this.loadBooks());\n    };\n\n    this.editBook = (id, name, category, authorId, availableCopies) => {\n      EBookService.editBook(id, name, category, authorId, availableCopies).then(() => this.loadBooks());\n    };\n\n    this.getBook = id => {\n      EBookService.getBook(id).then(data => {\n        this.setState({\n          selectedBook: data.data\n        });\n      });\n    };\n\n    this.takeBook = id => {\n      EBookService.takeBook(id).this(() => this.loadBooks);\n    };\n\n    this.loadCategories = () => {\n      return EBookService.fetchBookCategories();\n    };\n\n    this.state = {\n      books: [],\n      authors: [],\n      countries: [],\n      selectedBook: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/authors\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(Authors, {\n              authors: this.state.authors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/countries\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(Countries, {\n              countries: this.state.countries\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/books/edit/:id\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(BookEdit, {\n              onEditBook: this.editBook,\n              authors: this.state.authors,\n              categories: this.loadCategories(),\n              book: this.state.selectedBook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/books/add\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(BookAdd, {\n              onAddBook: this.addBook,\n              authors: this.state.authors,\n              categories: this.loadCategories()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/books\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(Books, {\n              books: this.state.books,\n              onDeleteBook: this.deleteBook,\n              onEdit: this.getBook,\n              onTake: this.takeBook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/books\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/edvin/IdeaProjects/emt-lab/frontend/src/components/App/App.js"],"names":["React","BrowserRouter","Router","Redirect","Route","Authors","Countries","Header","Books","BookAdd","BookEdit","EBookService","App","Component","constructor","props","loadBooks","fetchBooks","then","data","setState","books","loadAuthors","fetchAuthors","authors","loadCountries","fetchCountries","countries","addBook","name","category","authorId","availableCopies","deleteBook","id","editBook","getBook","selectedBook","takeBook","this","loadCategories","fetchBookCategories","state","render"],"mappings":"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","sourcesContent":["import './App.css';\nimport * as React from \"react\";\nimport {BrowserRouter as Router, Redirect, Route} from 'react-router-dom'\nimport Authors from \"../Authors/authors\";\nimport Countries from \"../Countries/countries\";\nimport Header from \"../Header/header\";\nimport Books from \"../Books/BookList/books\";\nimport BookAdd from \"../Books/BookAdd/bookAdd\";\nimport BookEdit from \"../Books/BookEdit/BookEdit\";\nimport EBookService from \"../../repository/EBookRepository\";\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            books: [],\n            authors: [],\n            countries: [],\n            selectedBook: {}\n        }\n    }\n\n    render() {\n        return (\n            <Router>\n                <Header/>\n                <main>\n                    <div>\n                        <Route path={\"/authors\"} exact render={\n                            () => <Authors authors={this.state.authors}/>}\n                        />\n                        <Route path={\"/countries\"} exact render={\n                            () => <Countries countries={this.state.countries}/>}\n                        />\n                        <Route path={\"/books/edit/:id\"} exact render={\n                            () => <BookEdit onEditBook={this.editBook}\n                                            authors={this.state.authors}\n                                            categories={this.loadCategories()}\n                                            book={this.state.selectedBook}/>}\n                        />\n                        <Route path={\"/books/add\"} exact render={\n                            () => <BookAdd onAddBook={this.addBook}\n                                           authors={this.state.authors}\n                                           categories={this.loadCategories()}/>}\n                        />\n                        <Route path={\"/books\"} exact render={\n                            () => <Books books={this.state.books}\n                                         onDeleteBook={this.deleteBook}\n                                         onEdit={this.getBook}\n                                         onTake={this.takeBook}\n                            />}\n                        />\n                        <Redirect to={\"/books\"}/>\n                    </div>\n                </main>\n            </Router>\n        )\n    }\n\n    loadBooks = () => {\n        EBookService.fetchBooks()\n            .then((data) => {\n                this.setState({\n                    books: data.data\n                })\n            });\n\n    };\n\n    loadAuthors = () => {\n        EBookService.fetchAuthors()\n            .then((data) => {\n                this.setState({\n                    authors: data.data\n                })\n            })\n    };\n\n    loadCountries = () => {\n        EBookService.fetchCountries()\n            .then((data) => {\n                this.setState({\n                    countries: data.data\n                })\n            })\n    };\n\n\n    addBook = (name, category, authorId, availableCopies) => {\n        EBookService.addBook(name, category, authorId, availableCopies)\n            .then(() => {\n                this.loadBooks();\n            })\n    }\n\n    deleteBook = (id) => {\n        EBookService.deleteBook(id)\n            .then(() => this.loadBooks())\n    }\n\n    editBook = (id, name, category, authorId, availableCopies) => {\n        EBookService.editBook(id, name, category, authorId, availableCopies)\n            .then(() => this.loadBooks())\n    }\n\n\n    getBook = (id) => {\n        EBookService.getBook(id)\n            .then((data) => {\n                this.setState({\n                    selectedBook: data.data\n                })\n            })\n    }\n\n    takeBook = (id) => {\n        EBookService.takeBook(id)\n            .this(() => this.loadBooks);\n    }\n\n    loadCategories = () => {\n        return EBookService.fetchBookCategories();\n    }\n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}